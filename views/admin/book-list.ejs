<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Book List</title>
    <!-- Include a CSS library for the pencil icon (e.g., Font Awesome) -->
    <link rel="stylesheet" href="/css/admin/update-books.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.0/css/all.min.css">
</head>
<body>
    <h1>Book List</h1>

    <ul id="bookList">
        <!-- Book titles with "Change" button for each book will be added here -->
        <% books.forEach((book)=>{ %>
            <li>
                <span id="bookTitle<%= book._id %>"><%= book.title %></span>
                <button onclick="showEditForm('<%= book._id %>')"><i class="fas fa-pencil-alt change-button"></i></button>
                <button onclick="deleteBook('<%= book._id %>')"><i class="fas fa-trash delete-button"></i></button>

                <form id="editForm<%= book._id %>" class="custom-form" style="display: none;">
                    <!-- Editable fields go here -->
                    <div class="form-group">
                        <label for="editedTitle<%= book._id %>">Title:</label>
                        <input type="text" id="editedTitle<%= book._id %>" class="custom-input" value="<%= book.title %>">
                    </div>
                
                    <div class="form-group">
                        <label for="editedAuthor<%= book._id %>">Author:</label>
                        <input type="text" id="editedAuthor<%= book._id %>" class="custom-input" value="<%= book.author %>">
                    </div>
                
                    <div class="form-group">
                        <label for="editedIsbn<%= book._id %>">ISBN:</label>
                        <input type="text" id="editedIsbn<%= book._id %>" class="custom-input" value="<%= book.isbn %>">
                    </div>
                
                    <div class="form-group">
                        <label for="editedCoverImage<%= book._id %>">Cover Image:</label>
                        <input type="file" id="editedCoverImage<%= book._id %>" class="form-control-file">
                    </div>
                
                    <div class="form-group">
                        <label for="editedPrice<%= book._id %>">Price:</label>
                        <input type="number" id="editedPrice<%= book._id %>" class="custom-input" value="<%= book.price %>">
                    </div>
                
                    <div class="form-group">
                        <label for="editedPublishedYear<%= book._id %>">Published Year:</label>
                        <input type="number" id="editedPublishedYear<%= book._id %>" class="custom-input" value="<%= book.published_year %>">
                    </div>
                
                    <div class="form-group">
                        <label for="editedGenre<%= book._id %>">Genre:</label>
                        <input type="text" id="editedGenre<%= book._id %>" class="custom-input" value="<%= book.genre %>">
                    </div>
                
                    <div class="form-group">
                        <label for="editedCopiesAvailable<%= book._id %>">Copies Available:</label>
                        <input type="number" id="editedCopiesAvailable<%= book._id %>" class="custom-input" value="<%= book.copies_available %>">
                    </div>
                
                    <div class="form-group">
                        <label for="editedDescription<%= book._id %>">Description:</label>
                        <textarea id="editedDescription<%= book._id %>" class="custom-input"><%= book.description %></textarea>
                    </div>
                
                    <div class="form-group">
                        <label for="editedPublisher<%= book._id %>">Publisher:</label>
                        <input type="text" id="editedPublisher<%= book._id %>" class="custom-input" value="<%= book.publisher %>">
                    </div>
                
                    <div class="button-group">
                        <button onclick="saveChanges('<%= book._id %>')" class="custom-button custom-primary-button">Save</button>
                        <button onclick="cancelEdit('<%= book._id %>')" class="custom-button custom-secondary-button">Cancel</button>
                    </div>
                </form>                
            </li>
        <% }); %>
    </ul>

    <script>
        // Function to show the edit form
        function showEditForm(bookId) {
            const change_button = document.getElementsByClassName('.change-button');
            const editForm = document.getElementById(`editForm${bookId}`);
            editForm.style.display = 'block';
        }

        // Function to save changes
        function saveChanges(bookId) {
            const editedTitle = document.getElementById(`editedTitle${bookId}`).value;
            const editedAuthor = document.getElementById(`editedAuthor${bookId}`).value;
            const editedIsbn = document.getElementById(`editedIsbn${bookId}`).value;
            const editedCoverImage = document.getElementById(`editedCoverImage${bookId}`).files[0];
            const editedPrice = document.getElementById(`editedPrice${bookId}`).value;
            const editedPublishedYear = document.getElementById(`editedPublishedYear${bookId}`).value;
            const editedGenre = document.getElementById(`editedGenre${bookId}`).value;
            const editedCopiesAvailable = document.getElementById(`editedCopiesAvailable${bookId}`).value;
            const editedDescription = document.getElementById(`editedDescription${bookId}`).value;
            const editedPublisher = document.getElementById(`editedPublisher${bookId}`).value;

            event.preventDefault();

            // Create a FormData object to handle file uploads
            const formData = new FormData();
            formData.append('title', editedTitle);
            formData.append('author', editedAuthor);
            formData.append('isbn', editedIsbn);
            formData.append('coverImage', editedCoverImage);
            formData.append('price', editedPrice);
            formData.append('published_year', editedPublishedYear);
            formData.append('genre', editedGenre);
            formData.append('copies_available', editedCopiesAvailable);
            formData.append('description', editedDescription);
            formData.append('publisher', editedPublisher);

            // You can send a POST request with the FormData to your server here to update the book data

            const bookTitle = document.getElementById(`bookTitle${bookId}`);
            bookTitle.textContent = editedTitle;


            fetch(`/admin/books/${bookId}`, {
                method: 'PUT',
                body: formData,
            })
            .then((response) => response.json())
            .then((updatedBook) => {
                // Update the displayed book title
                const bookTitle = document.getElementById(`bookTitle${bookId}`);
                bookTitle.textContent = updatedBook.title;

                // Hide the edit form
                const editForm = document.getElementById(`editForm${bookId}`);
                editForm.style.display = 'none';
            })
            .catch((error) => {
                console.error('Error saving changes:', error);
            });

            // For demonstration purposes, we'll just update the title client-side

            // Hide the edit form
            const editForm = document.getElementById(`editForm${bookId}`);
            editForm.style.display = 'none';
        }

        // Function to cancel editing
        function cancelEdit(bookId) {
            const editForm = document.getElementById(`editForm${bookId}`);
            editForm.style.display = 'none';
        }



        function deleteBook(bookId) {
            // You can confirm the deletion with a confirmation dialog
            const confirmation = confirm('Are you sure you want to delete this book?');
    
            if (confirmation) {
                // Send a DELETE request to your server to delete the book
                fetch(`/admin/books/${bookId}`, {
                    method: 'DELETE',
                })
                .then((response) => {
                    if (response.status === 204) {
                        // If the book is successfully deleted, remove it from the UI
                        const bookItem = document.querySelector(`#bookTitle${bookId}`).parentNode;
                        bookItem.parentNode.removeChild(bookItem);
                    } else {
                        console.error('Error deleting book:', response.statusText);
                    }
                })
                .catch((error) => {
                    console.error('Error deleting book:', error);
                });
            }
        }


    </script>
</body>
</html>
